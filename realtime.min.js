"use strict";function Realtime(sock,auth=null){let onMessage=null;return sock.onState(s=>{"connected"===s&&onMessage&&"function"==typeof onMessage&&onMessage({type:"connected"}),"disconnected"===s&&onMessage&&"function"==typeof onMessage&&onMessage({type:"disconnected"})}),sock.onError(err=>{onMessage&&"function"==typeof onMessage&&onMessage(err)}),sock.onMessage(async m=>{onMessage&&"function"==typeof onMessage&&onMessage(m)}),{onMessage:cb=>{onMessage=cb},connect:()=>{sock.connect()},close:()=>{sock.close()},whoami:()=>{sock.send({type:"whoami"})},join:room=>{sock.send({type:"join",room:room})},leave:room=>{sock.send({type:"leave",room:room})},chat:(room,message)=>{sock.send({type:"chat",room:room,chat:message})},message:(to,message)=>{sock.send({type:"message",to:to,message:message})},users:()=>{sock.send({type:"users"})},rooms:()=>{sock.send({type:"rooms"})},room:room=>{sock.send({type:"room",room:room})},auth:async()=>{auth&&sock.send({type:"auth",token:await auth.getToken()})},sock:sock}}